<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <Title>JWTLogout.Net</Title>
    <Authors>Quadri Ajagbe</Authors>
    <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
    <Description>This package seeks to help you manage your jwt logout process smoothly with only 3 lines of code, . 
It works with both ASP.NET Identity and your Custom JWT implementation
You can't entrust the client-side with the logout task on your application, because deleting the saved jwt in the browser local storage is not sufficient/efficient,
as such jwt can be copied and used for authentication on another computer or browser before it expires.</Description>
    <PackageProjectUrl>https://github.com/masterpiece007/Dotnet_JWTLogout</PackageProjectUrl>
    <RepositoryUrl>https://github.com/masterpiece007/Dotnet_JWTLogout</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageTags>jwt;auth;logout;jwtlogout.net;dotnet.logout;.net_logout;.netlogout;logout.net;dotnetlogout;authlogout;auth.logout</PackageTags>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <Version>1.0.4</Version>
  </PropertyGroup>

  <ItemGroup>
    <None Include="..\JWTLogoutAsync.Net\README.md">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="LiteDB" Version="4.1.4" />
    <PackageReference Include="Microsoft.AspNetCore.Http" Version="2.2.2" />
    <PackageReference Include="System.IdentityModel.Tokens.Jwt" Version="6.28.1" />
  </ItemGroup>

  <ItemGroup>
    <None Update="README.md">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
  </ItemGroup>

</Project>
